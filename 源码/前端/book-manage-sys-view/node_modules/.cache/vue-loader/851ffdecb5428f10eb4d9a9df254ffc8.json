{"remainingRequest":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\src\\views\\admin\\CategoryManage.vue?vue&type=style&index=0&id=46bf5706&scoped=true&lang=scss&","dependencies":[{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\src\\views\\admin\\CategoryManage.vue","mtime":1733647722000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnRhZy10aXAgew0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICBwYWRkaW5nOiA1cHggMTBweDsNCiAgICBib3JkZXItcmFkaXVzOiA1cHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0NSwgMjQ1LCAyNDUpOw0KICAgIGNvbG9yOiByZ2IoMTA0LCAxMTgsIDEzMCk7DQp9DQoNCi5pbnB1dC1kZWYgew0KICAgIGhlaWdodDogNDBweDsNCiAgICBsaW5lLWhlaWdodDogNDBweDsNCiAgICBvdXRsaW5lOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBmb250LXNpemU6IDIwcHg7DQogICAgY29sb3I6IHJnYigxMDIsIDEwMiwgMTAyKTsNCiAgICBmb250LXdlaWdodDogOTAwOw0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQouZGlhbG9nLWZvb3RlciB7DQogICAgLyog5L2/5oyJ6ZKu5rC05bmz5bGF5LitICovDQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KfQ0KDQovKiDlpoLmnpzpnIDopoHosIPmlbTmjInpkq7kuYvpl7TnmoTpl7Tot50gKi8NCi5jdXN0b21lciB7DQogICAgbWFyZ2luOiAwIDhweDsNCiAgICAvKiDmoLnmja7pnIDopoHosIPmlbTpl7Tot50gKi8NCn0NCg=="},{"version":3,"sources":["CategoryManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6NA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CategoryManage.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n    <el-row style=\"background-color: #FFFFFF;padding: 20px 0;border-radius: 5px;\">\r\n        <el-row style=\"padding: 10px;margin: 0 10px;\">\r\n            <el-row>\r\n                <span class=\"top-bar\">类别名</span>\r\n                <el-input size=\"small\" style=\"width: 188px;margin-right: 10px;\" v-model=\"categoryQueryDto.name\"\r\n                    placeholder=\"书籍类别名\" clearable @clear=\"handleFilterClear\">\r\n                </el-input>\r\n                <el-button size=\"small\" class=\"customer\"\r\n                    style=\"background-color: rgb(235, 237, 245);color: rgb(43, 121, 203);border: none;\" type=\"primary\"\r\n                    @click=\"handleFilter\">立即查询</el-button>\r\n                <el-button size=\"small\"\r\n                    style=\"background-color: rgb(235, 237, 245);color: rgb(43, 121, 203);border: none;\" class=\"customer\"\r\n                    type=\"info\" @click=\"add()\">新增书籍类别</el-button>\r\n            </el-row>\r\n        </el-row>\r\n        <el-row style=\"margin: 10px 20px;\">\r\n            <el-table :data=\"tableData\">\r\n                <el-table-column prop=\"name\"  label=\"书籍类别名\"></el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                    <template slot-scope=\"scope\" width=\"90\">\r\n                        <span class=\"text-button\" @click=\"handleEdit(scope.row)\">编辑</span>\r\n                        <span class=\"text-button\" @click=\"handleDelete(scope.row)\">删除</span>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-pagination style=\"margin: 20px 0;float: right;\" @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\" :current-page=\"currentPage\" :page-sizes=\"[10, 20]\"\r\n                :page-size=\"pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"totalItems\"></el-pagination>\r\n        </el-row>\r\n        <el-dialog :visible.sync=\"dialogOperation\" width=\"25%\">\r\n            <div slot=\"title\">\r\n                <p class=\"dialog-title\">{{ !isOperation ? '新增类别' : '修改类别' }}</p>\r\n            </div>\r\n            <div style=\"padding:0 20px 40px 15px;\">\r\n                <input class=\"dialog-input\" v-model=\"data.name\" placeholder=\"书籍类别名\" />\r\n            </div>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button size=\"small\" v-if=\"!isOperation\" style=\"background-color: rgb(43, 121, 203);border: none;\"\r\n                    class=\"customer\" type=\"info\" @click=\"addOperation\">新增</el-button>\r\n                <el-button size=\"small\" v-else style=\"background-color: rgb(43, 121, 203);border: none;\"\r\n                    class=\"customer\" type=\"info\" @click=\"updateOperation\">修改</el-button>\r\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(241, 241, 241);border: none;\"\r\n                    @click=\"cannel\">取消</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </el-row>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            data: {},\r\n            currentPage: 1,\r\n            pageSize: 10,\r\n            totalItems: 0,\r\n            dialogOperation: false, // 开关\r\n            isOperation: false, // 开关-标识新增或修改\r\n            tableData: [],\r\n            selectedRows: [],\r\n            categoryQueryDto: {}, // 搜索条件\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchFreshData();\r\n    },\r\n    methods: {\r\n        // 取消\r\n        cannel() {\r\n            this.resetValue(false, false);\r\n        },\r\n        // 多选框选中\r\n        handleSelectionChange(selection) {\r\n            this.selectedRows = selection;\r\n        },\r\n        // 批量删除数据\r\n        async batchDelete() {\r\n            if (!this.selectedRows.length) {\r\n                this.$message(`未选中任何数据`);\r\n                return;\r\n            }\r\n            const confirmed = await this.$swalConfirm({\r\n                title: '删除书籍类别数据',\r\n                text: `删除后不可恢复，是否继续？`,\r\n                icon: 'warning',\r\n            });\r\n            if (confirmed) {\r\n                try {\r\n                    let ids = this.selectedRows.map(entity => entity.id);\r\n                    const response = await this.$axios.post(`/category/batchDelete`, ids);\r\n                    if (response.data.code === 200) {\r\n                        this.$swal.fire({\r\n                            title: '删除提示',\r\n                            text: response.data.msg,\r\n                            icon: 'success',\r\n                            showConfirmButton: false,\r\n                            timer: 1000,\r\n                        });\r\n                        this.fetchFreshData();\r\n                        return;\r\n                    }\r\n                } catch (e) {\r\n                    this.$swal.fire({\r\n                        title: '错误提示',\r\n                        text: e,\r\n                        icon: 'error',\r\n                        showConfirmButton: false,\r\n                        timer: 2000,\r\n                    });\r\n                    console.error(`书籍类别信息删除异常：`, e);\r\n                }\r\n            }\r\n        },\r\n        resetQueryCondition() {\r\n            this.categoryQueryDto = {};\r\n            this.fetchFreshData();\r\n        },\r\n        // 书籍类别修改\r\n        updateOperation() {\r\n            this.$axios.put('/category/update', this.data).then(res => {\r\n                if (res.data.code === 200) {\r\n                    this.$notify({\r\n                        duration: 1000,\r\n                        title: '类别修改',\r\n                        message: '类别修改成功',\r\n                        type: 'success'\r\n                    });\r\n                    this.resetValue(false, false);\r\n                }\r\n            }).catch(error => {\r\n                this.$message.error('书籍修改异常：' + error);\r\n                console.log('书籍修改异常：', error);\r\n            })\r\n        },\r\n        resetValue(v1, v2) {\r\n            this.isOperation = v1;\r\n            this.dialogOperation = v2;\r\n            this.data = {};\r\n            this.fetchFreshData();\r\n        },\r\n        // 新增书籍类别\r\n        addOperation() {\r\n            this.$axios.post('/category/save', this.data).then(res => {\r\n                if (res.data.code === 200) {\r\n                    this.$notify({\r\n                        duration: 1000,\r\n                        title: '类别新增',\r\n                        message: '类别新增成功',\r\n                        type: 'success'\r\n                    });\r\n                    this.resetValue(false, false);\r\n                }\r\n            }).catch(error => {\r\n                this.$message.error('书籍新增异常：' + error);\r\n                console.log('书籍新增异常：', error);\r\n            })\r\n        },\r\n        async fetchFreshData() {\r\n            try {\r\n                this.tableData = [];\r\n                let startTime = null;\r\n                let endTime = null;\r\n                if (this.searchTime != null && this.searchTime.length === 2) {\r\n                    const [startDate, endDate] = await Promise.all(this.searchTime.map(date => date.toISOString()));\r\n                    startTime = `${startDate.split('T')[0]}T00:00:00`;\r\n                    endTime = `${endDate.split('T')[0]}T23:59:59`;\r\n                }\r\n                // 请求参数\r\n                const params = {\r\n                    current: this.currentPage,\r\n                    size: this.pageSize,\r\n                    startTime: startTime,\r\n                    endTime: endTime,\r\n                    ...this.categoryQueryDto\r\n                };\r\n                const response = await this.$axios.post('/category/query', params);\r\n                const { data } = response;\r\n                this.tableData = data.data;\r\n                this.totalItems = data.total;\r\n            } catch (error) {\r\n                console.error('查询书籍类别信息异常:', error);\r\n            }\r\n        },\r\n        add() {\r\n            this.dialogOperation = true;\r\n        },\r\n        handleFilter() {\r\n            this.currentPage = 1;\r\n            this.fetchFreshData();\r\n        },\r\n        handleFilterClear() {\r\n            this.handleFilter();\r\n        },\r\n        handleSizeChange(val) {\r\n            this.pageSize = val;\r\n            this.currentPage = 1;\r\n            this.fetchFreshData();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val;\r\n            this.fetchFreshData();\r\n        },\r\n        messagePush(row) {\r\n            this.data = { ...row };\r\n        },\r\n        handleEdit(row) {\r\n            this.dialogOperation = true;\r\n            this.isOperation = true;\r\n            row.userPwd = null;\r\n            this.data = { ...row }\r\n        },\r\n        handleDelete(row) {\r\n            this.selectedRows.push(row);\r\n            this.batchDelete();\r\n        }\r\n    },\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.tag-tip {\r\n    display: inline-block;\r\n    padding: 5px 10px;\r\n    border-radius: 5px;\r\n    background-color: rgb(245, 245, 245);\r\n    color: rgb(104, 118, 130);\r\n}\r\n\r\n.input-def {\r\n    height: 40px;\r\n    line-height: 40px;\r\n    outline: none;\r\n    border: none;\r\n    font-size: 20px;\r\n    color: rgb(102, 102, 102);\r\n    font-weight: 900;\r\n    width: 100%;\r\n}\r\n\r\n.dialog-footer {\r\n    /* 使按钮水平居中 */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n/* 如果需要调整按钮之间的间距 */\r\n.customer {\r\n    margin: 0 8px;\r\n    /* 根据需要调整间距 */\r\n}\r\n</style>"]}]}