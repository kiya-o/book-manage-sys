{"remainingRequest":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\src\\views\\admin\\BookshelfManage.vue?vue&type=style&index=0&id=364e8bc8&scoped=true&lang=scss&","dependencies":[{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\src\\views\\admin\\BookshelfManage.vue","mtime":1733647728000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5saXN0LWNvdmVyIHsNCiAgICB3aWR0aDogNTBweDsNCiAgICBoZWlnaHQ6IDcwcHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KfQ0K"},{"version":3,"sources":["BookshelfManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6OA;AACA;AACA;AACA;AACA","file":"BookshelfManage.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n    <el-row style=\"background-color: #FFFFFF;padding: 20px 0;border-radius: 5px;\">\r\n        <el-row style=\"padding: 10px;margin: 0 10px;\">\r\n            <el-row>\r\n                <span class=\"top-bar\">楼层</span>\r\n                <el-input size=\"small\" style=\"width: 188px;margin-right: 10px;\" v-model=\"bookshelfQueryDto.floor\"\r\n                    placeholder=\"楼层\" clearable @clear=\"handleFilterClear\">\r\n                </el-input>\r\n                <el-button size=\"small\" class=\"customer\"\r\n                    style=\"background-color: rgb(235, 237, 245);color: rgb(43, 121, 203);border: none;\" type=\"primary\"\r\n                    @click=\"handleFilter\">立即查询</el-button>\r\n                <el-button size=\"small\"\r\n                    style=\"background-color: rgb(235, 237, 245);color: rgb(43, 121, 203);border: none;\" class=\"customer\"\r\n                    type=\"info\" @click=\"add()\">新增书架</el-button>\r\n            </el-row>\r\n        </el-row>\r\n        <el-row style=\"margin: 10px 20px;\">\r\n            <el-table :data=\"tableData\">\r\n                <el-table-column prop=\"floor\" label=\"书架所在楼层\"></el-table-column>\r\n                <el-table-column prop=\"area\" width=\"188\" label=\"书架所在区域\"></el-table-column>\r\n                <el-table-column prop=\"frame\" width=\"148\" label=\"书架名\"></el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                    <template slot-scope=\"scope\" width=\"120\">\r\n                        <span class=\"text-button\" @click=\"handleEdit(scope.row)\">编辑</span>\r\n                        <span class=\"text-button\" @click=\"handleDelete(scope.row)\">删除</span>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-pagination style=\"margin: 20px 0;float: right;\" @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\" :current-page=\"currentPage\" :page-sizes=\"[5, 7]\"\r\n                :page-size=\"pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"totalItems\"></el-pagination>\r\n        </el-row>\r\n        <el-dialog :visible.sync=\"dialogOperation\" width=\"25%\">\r\n            <div slot=\"title\">\r\n                <p class=\"dialog-title\">{{ !isOperation ? '新增书架' : '修改书架' }}</p>\r\n            </div>\r\n            <div style=\"padding:0 20px 40px 15px;\">\r\n                <div style=\"margin-bottom: 8px;\">\r\n                    <div class=\"point\">书架所在楼层</div>\r\n                    <input class=\"dialog-input\" v-model=\"data.floor\" placeholder=\"楼层\" />\r\n                </div>\r\n                <div style=\"margin-bottom: 8px;\">\r\n                    <div class=\"point\">书架所在区域</div>\r\n                    <input class=\"dialog-input\" v-model=\"data.area\" placeholder=\"区域\" />\r\n                </div>\r\n                <div style=\"margin-bottom: 8px;\">\r\n                    <div class=\"point\">书架名</div>\r\n                    <input class=\"dialog-input\" v-model=\"data.frame\" placeholder=\"名称\" />\r\n                </div>\r\n            </div>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button size=\"small\" v-if=\"!isOperation\" style=\"background-color: rgb(43, 121, 203);border: none;\"\r\n                    class=\"customer\" type=\"info\" @click=\"addOperation\">新增</el-button>\r\n                <el-button size=\"small\" v-else style=\"background-color: rgb(43, 121, 203);border: none;\"\r\n                    class=\"customer\" type=\"info\" @click=\"updateOperation\">修改</el-button>\r\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(241, 241, 241);border: none;\"\r\n                    @click=\"dialogOperation = false\">取消</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </el-row>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            data: {},\r\n            currentPage: 1,\r\n            cover: null,\r\n            pageSize: 7,\r\n            totalItems: 0,\r\n            dialogOperation: false, // 开关\r\n            isOperation: false, // 开关-标识新增或修改\r\n            tableData: [],\r\n            selectedRows: [],\r\n            bookshelfQueryDto: {}, // 搜索条件\r\n            options: []\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchFreshData();\r\n    },\r\n    methods: {\r\n        // 多选框选中\r\n        handleSelectionChange(selection) {\r\n            this.selectedRows = selection;\r\n        },\r\n        // 批量删除数据\r\n        async batchDelete() {\r\n            if (!this.selectedRows.length) {\r\n                this.$message(`未选中任何数据`);\r\n                return;\r\n            }\r\n            const confirmed = await this.$swalConfirm({\r\n                title: '删除书架书架数据',\r\n                text: `删除后不可恢复，是否继续？`,\r\n                icon: 'warning',\r\n            });\r\n            if (confirmed) {\r\n                try {\r\n                    let ids = this.selectedRows.map(entity => entity.id);\r\n                    const response = await this.$axios.post(`/bookshelf/batchDelete`, ids);\r\n                    if (response.data.code === 200) {\r\n                        this.$swal.fire({\r\n                            title: '删除提示',\r\n                            text: response.data.msg,\r\n                            icon: 'success',\r\n                            showConfirmButton: false,\r\n                            timer: 2000,\r\n                        });\r\n                        this.fetchFreshData();\r\n                        return;\r\n                    }\r\n                } catch (e) {\r\n                    this.$swal.fire({\r\n                        title: '错误提示',\r\n                        text: e,\r\n                        icon: 'error',\r\n                        showConfirmButton: false,\r\n                        timer: 2000,\r\n                    });\r\n                    console.error(`书架书架信息删除异常：`, e);\r\n                }\r\n            }\r\n        },\r\n        resetQueryCondition() {\r\n            this.bookshelfQueryDto = {};\r\n            this.fetchFreshData();\r\n        },\r\n        // 修改信息\r\n        async updateOperation() {\r\n            try {\r\n                this.data.cover = this.cover;\r\n                const response = await this.$axios.put('/bookshelf/update', this.data);\r\n                this.$swal.fire({\r\n                    title: '书架书架信息修改',\r\n                    text: response.data.msg,\r\n                    icon: response.data.code === 200 ? 'success' : 'error',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                });\r\n                if (response.data.code === 200) {\r\n                    this.closeDialog();\r\n                    this.fetchFreshData();\r\n                    this.clearFormData();\r\n                }\r\n            } catch (error) {\r\n                console.error('提交表单时出错:', error);\r\n                this.$message.error('提交失败，请稍后再试！');\r\n            }\r\n        },\r\n        // 信息新增\r\n        async addOperation() {\r\n            try {\r\n                this.data.cover = this.cover;\r\n                const response = await this.$axios.post('/bookshelf/save', this.data);\r\n                this.$message[response.data.code === 200 ? 'success' : 'error'](response.data.msg);\r\n                if (response.data.code === 200) {\r\n                    this.closeDialog();\r\n                    this.fetchFreshData();\r\n                    this.clearFormData();\r\n                }\r\n            } catch (error) {\r\n                console.error('提交表单时出错:', error);\r\n                this.$message.error('提交失败，请稍后再试！');\r\n            }\r\n        },\r\n        closeDialog() {\r\n            this.dialogOperation = false;\r\n        },\r\n        clearFormData() {\r\n            this.data = {};\r\n            this.cover = null;\r\n        },\r\n        async fetchFreshData() {\r\n            try {\r\n                this.tableData = [];\r\n                let startTime = null;\r\n                let endTime = null;\r\n                if (this.searchTime != null && this.searchTime.length === 2) {\r\n                    const [startDate, endDate] = await Promise.all(this.searchTime.map(date => date.toISOString()));\r\n                    startTime = `${startDate.split('T')[0]}T00:00:00`;\r\n                    endTime = `${endDate.split('T')[0]}T23:59:59`;\r\n                }\r\n                // 请求参数\r\n                const params = {\r\n                    current: this.currentPage,\r\n                    size: this.pageSize,\r\n                    startTime: startTime,\r\n                    endTime: endTime,\r\n                    ...this.bookshelfQueryDto\r\n                };\r\n                const response = await this.$axios.post('/bookshelf/query', params);\r\n                const { data } = response;\r\n                this.tableData = data.data;\r\n                this.totalItems = data.total;\r\n            } catch (error) {\r\n                console.error('查询书架书架信息异常:', error);\r\n            }\r\n        },\r\n        add() {\r\n            this.dialogOperation = true;\r\n        },\r\n        handleFilter() {\r\n            this.currentPage = 1;\r\n            this.fetchFreshData();\r\n        },\r\n        handleFilterClear() {\r\n            this.handleFilter();\r\n        },\r\n        handleSizeChange(val) {\r\n            this.pageSize = val;\r\n            this.currentPage = 1;\r\n            this.fetchFreshData();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val;\r\n            this.fetchFreshData();\r\n        },\r\n        messagePush(row) {\r\n            this.data = { ...row };\r\n        },\r\n        handleEdit(row) {\r\n            this.dialogOperation = true;\r\n            this.isOperation = true;\r\n            this.data = { ...row };\r\n            this.cover = row.cover;\r\n        },\r\n        handleDelete(row) {\r\n            this.selectedRows.push(row);\r\n            this.batchDelete();\r\n        }\r\n    },\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.list-cover {\r\n    width: 50px;\r\n    height: 70px;\r\n    border-radius: 5px;\r\n}\r\n</style>"]}]}