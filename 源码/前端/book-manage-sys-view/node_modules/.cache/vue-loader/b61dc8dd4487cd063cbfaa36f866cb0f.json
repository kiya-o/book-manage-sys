{"remainingRequest":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\src\\views\\admin\\Home.vue?vue&type=style&index=0&id=a44c444e&scoped=true&lang=scss&","dependencies":[{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\src\\views\\admin\\Home.vue","mtime":1733385152000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\图书馆系统项目开发\\图书管理系统\\源码\\前端\\book-manage-sys-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWVudS1jb250YWluZXIgewogICAgZGlzcGxheTogZmxleDsKICAgIGhlaWdodDogMTAwdmg7CiAgICB3aWR0aDogMTAwJTsKCgogICAgLm1lbnUtc2lkZSB7CiAgICAgICAgd2lkdGg6IDI1M3B4OwogICAgICAgIG1pbi13aWR0aDogOTVweDsKICAgICAgICBoZWlnaHQ6IDEwMHZoOwogICAgICAgIHBhZGRpbmctdG9wOiAxMHB4OwogICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICAgICAgdHJhbnNpdGlvbjogd2lkdGggMC4zcyBlYXNlOwogICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDgsIDI0OCwgMjQ4KTsKICAgIH0KCiAgICAubWVudS1zaWRlLW5hcnJvdyB7CiAgICAgICAgd2lkdGg6IDExNXB4OwogICAgfQoKICAgIC5tYWluIHsKICAgICAgICBmbGV4LWdyb3c6IDE7CiAgICAgICAgb3ZlcmZsb3cteDogaGlkZGVuOwoKICAgICAgICAuaGVhZGVyLXNlY3Rpb24gewogICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIHBhZGRpbmc6IDAgMTVweCAwIDA7CiAgICAgICAgfQoKICAgICAgICAuY29udGVudC1zZWN0aW9uIHsKICAgICAgICAgICAgb3ZlcmZsb3cteDogaGlkZGVuOwogICAgICAgICAgICBmbGV4LWdyb3c6IDE7CiAgICAgICAgICAgIHBhZGRpbmc6IDAgMTVweDsKICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgICAgICAgICAgb3ZlcmZsb3cteTogYXV0bzsKICAgICAgICB9CiAgICB9CgoKCn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoNA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA","file":"Home.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n    <div class=\"menu-container\">\n        <div class=\"menu-side\" :class=\"{ 'menu-side-narrow': flag }\">\n            <div style=\"display: flex;align-items: center;\">\n                <Logo name=\"图书后台\" style=\"padding: 0 40px;margin: 15px 0;\" :flag=\"flag\" :bag=\"colorLogo\" />\n            </div>\n            <div style=\"margin-top: 12px;\">\n                <AdminMenu :flag=\"flag\" :routes=\"adminRoutes\" :bag=\"bagMenu\" @select=\"handleRouteSelect\" />\n            </div>\n        </div>\n        <div class=\"main\">\n            <div class=\"header-section\">\n                <LevelHeader @eventListener=\"eventListener\" @selectOperation=\"selectOperation\" :tag=\"tag\"\n                    :userInfo=\"userInfo\" />\n            </div>\n            <div class=\"content-section\">\n                <router-view></router-view>\n            </div>\n        </div>\n        <!-- 个人中心 -->\n        <el-dialog :show-close=\"false\" :visible.sync=\"dialogOperaion\" width=\"26%\">\n            <div slot=\"title\" style=\"padding: 25px 0 0 20px;\">\n                <span style=\"font-size: 18px;font-weight: 800;\">个人中心</span>\n            </div>\n            <el-row style=\"padding: 10px 20px 20px 20px;\">\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;margin-bottom: 10px;\">\n                        <span class=\"modelName\">*头像</span>\n                    </p>\n                    <el-upload class=\"avatar-uploader\" action=\"/api/book-manage-sys-api/v1.0/file/upload\"\n                        :show-file-list=\"false\" :on-success=\"handleAvatarSuccess\">\n                        <img v-if=\"userInfo.url\" :src=\"userInfo.url\" style=\"width: 80px;height: 80px;\">\n                        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n                    </el-upload>\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;\">\n                        <span class=\"modelName\">*用户名</span>\n                    </p>\n                    <input class=\"input-title\" v-model=\"userInfo.name\" placeholder=\"用户名\">\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;\">\n                        <span class=\"modelName\">*用户邮箱</span>\n                    </p>\n                    <input class=\"input-title\" v-model=\"userInfo.email\" placeholder=\"用户邮箱\">\n                </el-row>\n            </el-row>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(241, 241, 241);border: none;\"\n                    @click=\"dialogOperaion = false\">取 消</el-button>\n                <el-button size=\"small\" style=\"background-color: #15559a;border: none;\" class=\"customer\" type=\"info\"\n                    @click=\"updateUserInfo\">修改</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport request from \"@/utils/request.js\";\nimport router from \"@/router/index\";\nimport { clearToken } from \"@/utils/storage\"\nimport AdminMenu from '@/components/VerticalMenu.vue';\nimport Logo from '@/components/Logo.vue';\nimport LevelHeader from '@/components/LevelHeader.vue';\nexport default {\n    name: \"Admin\",\n    components: {\n        Logo,\n        LevelHeader,\n        AdminMenu\n    },\n    data() {\n        return {\n            adminRoutes: [],\n            activeIndex: '',\n            userInfo: {\n                id: null,\n                url: '',\n                name: '',\n                role: null,\n                email: ''\n            },\n            flag: false,\n            tag: '可视化',\n            bag: 'rgb(248,248,248)',\n            colorLogo: '#1c1c1c',\n            bagMenu: 'rgb(248,248,248)',\n            dialogOperaion: false\n        };\n    },\n    created() {\n        let menus = router.options.routes.filter(route => route.path == '/admin')[0];\n        this.adminRoutes = menus.children;\n        this.tokenCheckLoad();\n        this.menuOperationHistory();\n    },\n\n    methods: {\n        async updateUserInfo() {\n            try {\n                const userUpdateDTO = {\n                    userAvatar: this.userInfo.url,\n                    userName: this.userInfo.name,\n                    userEmail: this.userInfo.email\n                }\n                const resposne = await this.$axios.put(`/user/update`, userUpdateDTO);\n                const { data } = resposne;\n                if (data.code === 200) {\n                    this.dialogOperaion = false;\n                    this.tokenCheckLoad();\n                    this.$swal.fire({\n                        title: '修改个人信息',\n                        text: data.msg,\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 1000,\n                    });\n                }\n            } catch (e) {\n                this.dialogOperaion = false;\n                this.$swal.fire({\n                    title: '修改个人信息异常',\n                    text: e,\n                    icon: 'error',\n                    showConfirmButton: false,\n                    timer: 2000,\n                });\n                console.error(`修改个人信息异常:${e}`);\n            }\n        },\n        handleAvatarSuccess(res, file) {\n            if (res.code !== 200) {\n                this.$message.error(`头像上传异常`);\n                return;\n            }\n            this.$message.success(`头像上传成功`);\n            this.userInfo.url = res.data;\n        },\n        eventListener(event) {\n            // 个人中心\n            if (event === 'center') {\n                this.dialogOperaion = true;\n            }\n            // 退出登录\n            if (event === 'loginOut') {\n                this.loginOut();\n            }\n        },\n        async loginOut() {\n            const confirmed = await this.$swalConfirm({\n                title: '退出登录？',\n                text: `推出后需重新登录？`,\n                icon: 'warning',\n            });\n            if (confirmed) {\n                this.$swal.fire({\n                    title: '退出登录成功',\n                    text: '1s 后返回登录页面',\n                    icon: 'success',\n                    showConfirmButton: false,\n                    timer: 1000,\n                });\n                setTimeout(() => {\n                    clearToken();\n                    this.$router.push(\"/login\");\n                }, 1000)\n            }\n        },\n        menuOperationHistory() {\n            this.flag = sessionStorage.getItem('flag') === 'true';\n        },\n        selectOperation(flag) {\n            this.flag = flag;\n        },\n        handleRouteSelect(index) {\n            let ary = this.adminRoutes.filter(entity => entity.path == index);\n            this.tag = ary[0].name;\n            if (this.$router.currentRoute.fullPath == index) {\n                return;\n            }\n            this.$router.push(index);\n        },\n        // Token检验\n        async tokenCheckLoad() {\n            try {\n                const res = await request.get('user/auth');\n                // 错误处理\n                if (res.data.code === 400) {\n                    this.$message.error(res.data.msg);\n                    this.$router.push('/login');\n                    return;\n                }\n                // 用户信息赋值\n                const { id, userAvatar: url, userName: name, userRole: role, userEmail: email } = res.data.data;\n                this.userInfo = { id, url, name, role, email };\n                // 根据角色解析路由\n                const rolePath = role === 1 ? '/admin' : '/user';\n                const targetMenu = router.options.routes.find(route => route.path === rolePath);\n                if (targetMenu) {\n                    this.routers = targetMenu.children;\n                } else {\n                    console.warn(`未找到与角色对应的路由：${rolePath}`);\n                }\n            } catch (error) {\n                console.error('获取用户认证信息时发生错误:', error);\n                this.$message.error('认证信息加载失败，请重试！');\n            }\n        },\n    }\n};\n</script>\n<style scoped lang=\"scss\">\n.menu-container {\n    display: flex;\n    height: 100vh;\n    width: 100%;\n\n\n    .menu-side {\n        width: 253px;\n        min-width: 95px;\n        height: 100vh;\n        padding-top: 10px;\n        box-sizing: border-box;\n        transition: width 0.3s ease;\n        background-color: rgb(248, 248, 248);\n    }\n\n    .menu-side-narrow {\n        width: 115px;\n    }\n\n    .main {\n        flex-grow: 1;\n        overflow-x: hidden;\n\n        .header-section {\n            max-width: 100%;\n            padding: 0 15px 0 0;\n        }\n\n        .content-section {\n            overflow-x: hidden;\n            flex-grow: 1;\n            padding: 0 15px;\n            box-sizing: border-box;\n            overflow-y: auto;\n        }\n    }\n\n\n\n}\n</style>"]}]}